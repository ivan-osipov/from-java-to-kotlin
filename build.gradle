plugins {
    id 'org.springframework.boot' version '2.2.4.RELEASE'
    id "io.spring.dependency-management" version "1.0.9.RELEASE"
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version "1.3.61"
//    id "org.jetbrains.kotlin.plugin.spring" version "1.3.61"
//    id "org.jetbrains.kotlin.plugin.allopen" version "1.3.61"
}

group = 'ru.i-osipov'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

test {
    useJUnitPlatform()
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
//    implementation('org.jetbrains.kotlin:kotlin-reflect')
    implementation('org.springframework.boot:spring-boot-starter-data-mongodb')
    implementation('org.springframework.boot:spring-boot-starter-web')
    implementation('org.springframework.boot:spring-boot-starter-aop')
    implementation('org.modelmapper:modelmapper:2.3.4')
    implementation('com.google.guava:guava:28.2-jre')
    implementation('org.springdoc:springdoc-openapi-webmvc-core:1.2.30')
    implementation('org.springdoc:springdoc-openapi-ui:1.2.30')
    implementation('org.springdoc:springdoc-openapi-security:1.2.30')
    compileOnly('org.projectlombok:lombok')
    annotationProcessor('org.springframework.boot:spring-boot-configuration-processor')
    annotationProcessor('org.projectlombok:lombok')
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    testImplementation('org.junit.jupiter:junit-jupiter-api:5.5.2')
    testRuntimeOnly('org.junit.jupiter:junit-jupiter-engine:5.5.2')
    testImplementation("io.mockk:mockk:1.9.3")
    testImplementation('org.jetbrains.kotlin:kotlin-stdlib')
}

compileTestKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjvm-default=compatibility"]
        jvmTarget = "1.8"
    }
}
